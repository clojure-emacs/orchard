version: 2.1

# Default settings for executors

orbs:
  win: circleci/windows@5.0.0

defaults: &defaults
  working_directory: ~/repo
  environment:
    JVM_OPTS: -Xmx3200m -Dclojure.main.report=stderr

# Runners for each major OpenJDK

executors:
  jdk8:
    docker:
      - image: clojure:temurin-8-lein-2.11.2-noble
    <<: *defaults
  jdk11:
    docker:
      - image: clojure:temurin-11-lein-2.11.2-noble
    <<: *defaults
  jdk17:
    docker:
      - image: clojure:temurin-17-lein-2.11.2-noble
    <<: *defaults
  jdk21:
    docker:
      - image: clojure:temurin-21-lein-2.11.2-noble
    <<: *defaults
  jdk24:
    docker:
      - image: clojure:temurin-24-lein-2.11.2-noble
    <<: *defaults

# Runs a given set of steps, with some standard pre- and post-
# steps, including restoring of cache, saving of cache.
#
# Adapted from https://github.com/lambdaisland/meta/blob/master/circleci/clojure_orb.yml

commands:
  with_cache:
    description: |
      Run a set of steps with Maven dependencies and Clojure classpath cache
      files cached.
      This command restores ~/.m2, .cpcache and such if they were previously cached,
      then runs the provided steps, and finally saves the cache.
      The cache-key is generated based on the contents of `deps.edn` present in
      the `working_directory`.
    parameters:
      steps:
        type: steps
      files:
        description: Files to consider when creating the cache key
        type: string
        default: "deps.edn project.clj"
      cache_version:
        type: string
        description: "Key used to identify unique cache"
        default: "1"
    steps:
      - run:
          name: Install wget
          command: |
            apt-get update && apt-get install -y wget unzip zip
      - run:
          name: Generate Cache Checksum
          command: |
            for file in << parameters.files >>
            do
              find . -name $file -exec cat {} +
            done | sha256sum | awk '{print $1}' > /tmp/clojure_cache_seed
      - restore_cache:
          key: cache-<< parameters.cache_version >>-{{ checksum "/tmp/clojure_cache_seed" }}
      - steps: << parameters.steps >>
      - save_cache:
          paths:
            - ~/.m2
            - .cpcache
            - base-src-jdk11.zip
            - base-src-jdk17.zip
            - base-src-jdk21.zip
            - base-src-jdk24.zip
          key: cache-<< parameters.cache_version >>-{{ checksum "/tmp/clojure_cache_seed" }}

  setup-windows:
    steps:
      - checkout
      - run:
          name: Install Leiningen
          command: choco install lein

jobs:

  lint:
    parameters:
      clojure_version:
        type: string
        default: "1.12"
    executor: jdk24
    environment:
      CLOJURE_VERSION: << parameters.clojure_version >>
      TEST_PROFILES: "-user,-dev,+test,+cljs"
    steps:
      - checkout
      - with_cache:
          cache_version: "lint_v2_<< parameters.clojure_version >>"
          steps:
            - run:
                name: Running cljfmt
                command: make cljfmt
            - run:
                name: Running clj-kondo
                command: make kondo
            - run:
                name: Running Eastwood
                command: make eastwood

  deploy:
    executor: jdk8
    steps:
      - checkout
      - run:
         name: Deploy
         command: make deploy

  test:
    description: |
      Run tests against given version of JDK and Clojure
    parameters:
      command:
        description: Command to pass to Make
        type: string
        default: test
      jdk_version:
        description: Version of JDK to test against
        type: string
      clojure_version:
        description: Version of Clojure to test against
        type: string
    executor: << parameters.jdk_version >>
    environment:
      CLOJURE_VERSION: << parameters.clojure_version >>
      JDK_SRC_VERSION: << parameters.jdk_version >>
    steps:
      - checkout
      - with_cache:
          cache_version: "test_v1_<< parameters.clojure_version >>_<< parameters.jdk_version >>_<< parameters.command >>"
          steps:
            - run:
                name: Running tests (make << parameters.command >>)
                command: make << parameters.command >>

  test_windows:
    description: |
      Run tests on MS-Windows using the system's JDK version and Clojure 1.12.
    executor: win/default
    steps:
      - setup-windows
      - run:
          name: Running tests on Windows
          command: |
            java -version; if(-not $?){exit 9}
            lein with-profile "-user,-dev,+test,+cljs,+1.12" test; if(-not $?){exit 9}

# The ci-test-matrix does the following:
#
# - run tests against the target matrix
# - kondo, eastwood and cljfmt

run_always: &run_always
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

workflows:
  version: 2.1
  ci-test-matrix:
    jobs:
      - test:
          matrix:
            alias: "test"
            parameters:
              jdk_version: [jdk8, jdk11, jdk17, jdk21, jdk24]
              clojure_version: ["1.10", "1.11", "1.12"]
          <<: *run_always
      - test:
          # Sanity check that we don't have a requirement for Clojurescript being on the classpath.
          matrix:
            alias: "test_no_extra_deps"
            parameters:
              jdk_version: [jdk24]
              clojure_version: ["1.12"]
              command: ["test-no-extra-deps"]
          <<: *run_always
      - test_windows:
          <<: *run_always
      - lint:
          <<: *run_always
      - deploy:
          requires:
            - test
            - test_no_extra_deps
            - test_windows
            - lint
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+(-alpha\d+)?$/
